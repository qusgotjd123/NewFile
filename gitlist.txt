# This is Git's per-user configuration file.
[user]
	name = qusgotjd123
	email = qusgotjd123456@naver.com

[core]
	editor = notepad

[alias]
	lo = log --all --decorate --oneline --graph

간단하계 옵션을 사용하기위해 lo
작업을 편하게 하기위해서

브랜치-동일한 소스코드를 여럿이 동시 작업 가능 서로 분할작업도 가능하다.
master브랜치-


브랜치 왓다갓다 작업가능
2개의 브랜치 합체가능 코드 합치기 가능

브랜치 만들기 git branch 하고싶은이름
브랜치 확인 git branch

브랜치 전환 git checkout 설정했던이름
브랜치 병합 할때 git merge 병합하고싶은 파일
브랜치 삭제 git branch -d 설정했던이름

master myfile.txt a+

자바 main쓰고 ctrl+space

public static void main(String[] args){    }


캡슐화
데이터와 알고리즘을 하나로 묶어 공용 인터페이스만 제공 하고 세부사항을 감추는것.

상속
부모 클래스이 메소드를 그대로 이어 받아 사용하려면 자신의 메소드 이름 앞부분에
super(). 을 붙이고 매개변수에 서는 self를 뺴고 사용한다.

인스턴스를 속성으로 사용하기
큰 클래스의 일부분을 잘라내 별도의 클래스로 만들어 사용한다.

다형성(Pylymorphism)

클래스를 정의할 떄 class ClassName:과 class ClassName(object):는 동일하다.
__new__() 메소드는 객체가 생성될 때 자동으로 호출된다.
__init__()는 그다음 ^^

__str__()메소드는 객체의 크래스 이름과 객체이ㅡ 메모리 주소로 구성된 객체에 
대한 설명을 문자열로 반환한다.